# Generated by Django 3.2 on 2021-04-13 11:43

from django.db import migrations
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import salesforce.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', salesforce.fields.CharField(max_length=40)),
                ('donor_class', salesforce.fields.CharField(blank=True, db_column='Donor_class__c', default=salesforce.fields.DefaultedOnCreate('None'), max_length=255, verbose_name='Donor class')),
            ],
            options={
                'db_table': 'Contact',
                'abstract': False,
                'base_manager_name': 'base_manager',
            },
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Unreal',
            fields=[
                ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
                ('bool_x', salesforce.fields.BooleanField(default=salesforce.fields.DefaultedOnCreate())),
                ('int_x', salesforce.fields.IntegerField(default=salesforce.fields.DefaultedOnCreate())),
                ('float_x', salesforce.fields.FloatField(default=salesforce.fields.DefaultedOnCreate())),
                ('decimal_x', salesforce.fields.DecimalField(decimal_places=2, default=salesforce.fields.DefaultedOnCreate(), max_digits=9)),
                ('str_x', salesforce.fields.CharField(default=salesforce.fields.DefaultedOnCreate(), max_length=255)),
                ('date_x', salesforce.fields.DateField(default=salesforce.fields.DefaultedOnCreate())),
                ('datetime_x', salesforce.fields.DateTimeField(default=salesforce.fields.DefaultedOnCreate())),
                ('time_x', salesforce.fields.TimeField(default=salesforce.fields.DefaultedOnCreate())),
                ('str2_x', salesforce.fields.CharField(default=salesforce.fields.DefaultedOnCreate('no'), max_length=255)),
                ('bool2_x', salesforce.fields.BooleanField(default=salesforce.fields.DefaultedOnCreate(True))),
                ('callable_timestamp', salesforce.fields.DateTimeField(default=salesforce.fields.DefaultedOnCreate(django.utils.timezone.now))),
                ('normal', salesforce.fields.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Unreal',
                'abstract': False,
                'base_manager_name': 'base_manager',
            },
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', salesforce.fields.CharField(max_length=80)),
            ],
            options={
                'db_table': 'User',
                'abstract': False,
                'base_manager_name': 'base_manager',
            },
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', salesforce.fields.CharField(max_length=80)),
                ('owner', salesforce.fields.ForeignKey(default=salesforce.fields.DefaultedOnCreate(), on_delete=django.db.models.deletion.DO_NOTHING, to='test_mock2.user')),
            ],
            options={
                'db_table': 'Account',
                'abstract': False,
                'base_manager_name': 'base_manager',
            },
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
